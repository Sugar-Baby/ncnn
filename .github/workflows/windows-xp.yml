name: windows-xp
on:
  push:
    branches: [master]
    paths:
    - '.github/workflows/windows-xp.yml'
    - 'toolchains/windows-xp.toolchain.cmake'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
    - 'tools/**'
    - '!tools/pnnx/**'
    - 'examples/**'
    - 'benchmark/**'
  pull_request:
    branches: [master]
    paths:
    - '.github/workflows/windows-xp.yml'
    - 'toolchains/windows-xp.toolchain.cmake'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
    - 'tools/**'
    - '!tools/pnnx/**'
    - 'examples/**'
    - 'benchmark/**'
concurrency:
  group: windows-xp-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  windows-xp:
    name: Windows XP Compatibility
    runs-on: windows-2022

    env:
      UseMultiToolTask: true

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: x86 (Windows XP compatible)
      run: |
        mkdir build-xp
        cd build-xp
        
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/windows-xp.toolchain.cmake -DNCNN_VULKAN=OFF -DNCNN_SIMPLEOCV=ON -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles" ..
        
        cmake --build . --config Release -j 2

    - name: x86-test (Windows XP compatible)
      run: |
        cd build-xp
        ctest -C Release --output-on-failure -j 2

    - name: Verify XP Compatibility
      run: |
        cd build-xp
        
        Write-Host "Checking test executables..."
        Get-ChildItem -Path "tests" -Filter "*.exe" -Recurse | ForEach-Object {
          Write-Host "✓ Found test executable: $($_.Name)"
        }
        
        Write-Host "Checking library files..."
        Get-ChildItem -Path "src" -Filter "*.dll" -Recurse | ForEach-Object {
          Write-Host "✓ Found library: $($_.Name)"
        }
        
        Write-Host "Checking static libraries..."
        Get-ChildItem -Path "src" -Filter "*.a" -Recurse | ForEach-Object {
          Write-Host "✓ Found static library: $($_.Name)"
        }
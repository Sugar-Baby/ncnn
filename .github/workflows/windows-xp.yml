name: windows-xp
on:
  push:
    branches: [master]
    paths:
    - '.github/workflows/windows-xp.yml'
    - 'toolchains/windows-xp.toolchain.cmake'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
    - 'tools/**'
    - '!tools/pnnx/**'
    - 'examples/**'
    - 'benchmark/**'
  pull_request:
    branches: [master]
    paths:
    - '.github/workflows/windows-xp.yml'
    - 'toolchains/windows-xp.toolchain.cmake'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
    - 'tools/**'
    - '!tools/pnnx/**'
    - 'examples/**'
    - 'benchmark/**'
concurrency:
  group: windows-xp-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  windows-xp:
    name: Windows XP Compatibility
    runs-on: windows-2022

    env:
      UseMultiToolTask: true

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Install v141_xp toolset
      run: |
        # Download and install VS2017 Build Tools with v141_xp support
        Invoke-WebRequest -Uri "https://aka.ms/vs/15/release/vs_buildtools.exe" -OutFile "vs_buildtools.exe" -UseBasicParsing
        
        $installArgs = @(
          "--quiet",
          "--wait", 
          "--norestart",
          "--nocache",
          "--installPath", "C:\BuildTools",
          "--add", "Microsoft.VisualStudio.Workload.VCTools",
          "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64",
          "--add", "Microsoft.VisualStudio.Component.Windows10SDK.17134",
          "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64.141",
          "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64.141_xp"
        )
        
        Start-Process -FilePath ".\vs_buildtools.exe" -ArgumentList $installArgs -Wait -NoNewWindow

    - name: Setup MinGW environment
      run: |
        # Install MinGW-w64 using winget
        winget install -e --id MSYS2.MSYS2
        $env:PATH = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;$env:PATH"
        
        # Verify MinGW installation
        gcc --version
        g++ --version
        mingw32-make --version

    - name: x86 MinGW (Windows XP compatible)
      run: |
        # Set MinGW environment
        $env:PATH = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;$env:PATH"
        
        mkdir build-xp-mingw
        cd build-xp-mingw
        
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/windows-xp.toolchain.cmake -DNCNN_VULKAN=OFF -DNCNN_SIMPLEOCV=ON -DNCNN_BUILD_TESTS=ON -DNCNN_RUNTIME_CPU=OFF -DNCNN_AVX=OFF -DNCNN_BUILD_WITH_STATIC_CRT=ON -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles" ..
        
        cmake --build . --config Release -j 2

    - name: x86 MinGW test (Windows XP compatible)
      run: |
        # Set MinGW environment
        $env:PATH = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;$env:PATH"
        
        cd build-xp-mingw
        ctest -C Release --output-on-failure -j 2

    - name: x86 MSVC (Windows XP compatible)
      run: |
        mkdir build-xp-msvc
        cd build-xp-msvc
        
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/windows-xp-msvc.toolchain.cmake -DNCNN_VULKAN=OFF -DNCNN_SIMPLEOCV=ON -DNCNN_BUILD_TESTS=ON -DNCNN_RUNTIME_CPU=OFF -DNCNN_AVX=OFF -DNCNN_BUILD_WITH_STATIC_CRT=ON -DCMAKE_BUILD_TYPE=Release ..
        
        cmake --build . --config Release -j 2

    - name: x86 MSVC test (Windows XP compatible)
      run: |
        cd build-xp-msvc
        ctest -C Release --output-on-failure -j 2

    - name: Verify XP Compatibility (MinGW)
      run: |
        cd build-xp-mingw
        
        Write-Host "Checking test executables..."
        Get-ChildItem -Path "tests" -Filter "*.exe" -Recurse | ForEach-Object {
          Write-Host "✓ Found test executable: $($_.Name)"
        }
        
        Write-Host "Checking library files..."
        Get-ChildItem -Path "src" -Filter "*.dll" -Recurse | ForEach-Object {
          Write-Host "✓ Found library: $($_.Name)"
        }
        
        Write-Host "Checking static libraries..."
        Get-ChildItem -Path "src" -Filter "*.a" -Recurse | ForEach-Object {
          Write-Host "✓ Found static library: $($_.Name)"
        }

    - name: Verify XP Compatibility (MSVC)
      run: |
        cd build-xp-msvc
        
        Write-Host "Checking test executables..."
        Get-ChildItem -Path "tests" -Filter "*.exe" -Recurse | ForEach-Object {
          Write-Host "✓ Found test executable: $($_.Name)"
        }
        
        Write-Host "Checking library files..."
        Get-ChildItem -Path "src" -Filter "*.dll" -Recurse | ForEach-Object {
          Write-Host "✓ Found library: $($_.Name)"
        }
        
        Write-Host "Checking static libraries..."
        Get-ChildItem -Path "src" -Filter "*.lib" -Recurse | ForEach-Object {
          Write-Host "✓ Found static library: $($_.Name)"
        }